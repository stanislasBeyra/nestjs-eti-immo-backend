import { Injectable } from '@nestjs/common';
import { Command } from 'nestjs-command';
import { UnpaidRentService } from '../unpaid-rent.service';

@Injectable()
export class GenerateUnpaidCliCommand {
  constructor(private readonly unpaidRentService: UnpaidRentService) {}

  @Command({
    command: 'generate:unpaid-rents',
    describe: 'G√©n√®re automatiquement les loyers impay√©s pour tous les locataires',
  })
  async generateUnpaidRents() {
    try {
      console.log('üöÄ G√©n√©ration des loyers impay√©s en cours...');
      await this.unpaidRentService.generateUnpaidRents();
      console.log('‚úÖ G√©n√©ration des loyers impay√©s termin√©e avec succ√®s!');
    } catch (error) {
      console.error('‚ùå Erreur lors de la g√©n√©ration:', error.message);
      process.exit(1);
    }
  }

  @Command({
    command: 'list:unpaid-rents',
    describe: 'Affiche la liste des loyers impay√©s',
  })
  async listUnpaidRents() {
    try {
      console.log('üìã R√©cup√©ration des loyers impay√©s...');
      const unpaidRents = await this.unpaidRentService.getUnpaidRentsList();
      console.log(`üìä Nombre de loyers impay√©s: ${unpaidRents.length}`);
      unpaidRents.forEach((rent, index) => {
        console.log(`${index + 1}. ${rent.locataire_firstname} ${rent.locataire_lastname} - ${rent.montant_total_impaye}‚Ç¨ - ${rent.mois_impayes} mois`);
      });
    } catch (error) {
      console.error('‚ùå Erreur:', error.message);
    }
  }
}