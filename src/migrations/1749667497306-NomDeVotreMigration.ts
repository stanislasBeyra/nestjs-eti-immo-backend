import { MigrationInterface, QueryRunner } from "typeorm";

export class NomDeVotreMigration1749667497306 implements MigrationInterface {
    name = 'NomDeVotreMigration1749667497306'

    public async up(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`CREATE TABLE \`agency_documents\` (\`id\` bigint NOT NULL AUTO_INCREMENT COMMENT 'Identifiant unique du document', \`agence_id\` bigint NOT NULL COMMENT 'ID de l''agence propriétaire du document', \`type\` enum ('Registre de commerce', 'Patente', 'Attestation fiscale', 'Autre') NOT NULL COMMENT 'Type de document', \`file_path\` varchar(255) NOT NULL COMMENT 'Chemin vers le fichier du document', \`reference_number\` varchar(255) NULL COMMENT 'Numéro de référence du document', \`expiry_date\` date NULL COMMENT 'Date d''expiration du document', \`is_verified\` tinyint NOT NULL COMMENT 'Indique si le document est vérifié' DEFAULT 0, \`notes\` text NULL COMMENT 'Notes ou commentaires sur le document', \`created_at\` datetime(6) NOT NULL COMMENT 'Date de création du document' DEFAULT CURRENT_TIMESTAMP(6), \`updated_at\` datetime(6) NOT NULL COMMENT 'Date de dernière mise à jour' DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`deleted_at\` datetime(6) NULL COMMENT 'Date de suppression (soft delete)', PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`notifications\` (\`id\` bigint NOT NULL AUTO_INCREMENT COMMENT 'Identifiant unique de la notification', \`created_by\` bigint NOT NULL COMMENT 'ID de l''utilisateur qui a créé la notification', \`reference_id\` bigint NULL COMMENT 'ID de l''élément associé à la notification (paiement, bien, etc.)', \`reference_type\` varchar(50) NULL COMMENT 'Type de référence (paiement, bien, location, etc.)', \`type\` enum ('Paiement reçu', 'Paiement en retard', 'Rappel de paiement', 'Paiement annulé', 'Bien ajouté', 'Bien modifié', 'Location créée', 'Location modifiée', 'Document ajouté', 'Document expiré') NOT NULL COMMENT 'Type de notification', \`status\` enum ('non_lu', 'lu', 'archive') NOT NULL COMMENT 'Statut de la notification' DEFAULT 'non_lu', \`title\` varchar(255) NOT NULL COMMENT 'Titre de la notification', \`message\` text NOT NULL COMMENT 'Contenu détaillé de la notification', \`metadata\` json NULL COMMENT 'Données additionnelles de la notification', \`read_at\` timestamp NULL COMMENT 'Date de lecture de la notification', \`created_at\` datetime(6) NOT NULL COMMENT 'Date de création de la notification' DEFAULT CURRENT_TIMESTAMP(6), \`updated_at\` datetime(6) NOT NULL COMMENT 'Date de dernière mise à jour' DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`deleted_at\` datetime(6) NULL COMMENT 'Date de suppression (soft delete)', PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`paiements\` (\`id\` bigint NOT NULL AUTO_INCREMENT, \`agence_id\` bigint NOT NULL COMMENT 'ID de l''agence' DEFAULT '0', \`property_id\` bigint NOT NULL COMMENT 'ID du bien immobilier' DEFAULT '0', \`locataire_id\` bigint NOT NULL COMMENT 'ID du locataire' DEFAULT '0', \`proprietaire_id\` bigint NULL COMMENT 'ID du propriétaire', \`location_id\` bigint NULL COMMENT 'ID du bail/contrat de location', \`created_by\` bigint NULL COMMENT 'ID de l''utilisateur qui a créé le paiement', \`numero_recu\` varchar(255) NOT NULL COMMENT 'Numéro de reçu unique', \`type\` enum ('loyer', 'caution', 'frais', 'autre') NOT NULL COMMENT 'Type de paiement' DEFAULT 'loyer', \`montant_attendu\` decimal(18,2) NOT NULL COMMENT 'Montant total attendu', \`montant\` decimal(18,2) NOT NULL COMMENT 'Montant actuellement payé' DEFAULT '0.00', \`methode_paiement\` varchar(255) NULL COMMENT 'Méthode de paiement (espèces, virement, etc.)', \`date_paiement\` date NOT NULL COMMENT 'Date d''échéance du paiement', \`date_paiement_effectif\` date NULL COMMENT 'Date effective du paiement', \`periode_debut\` date NULL COMMENT 'Début de la période couverte', \`periode_fin\` date NULL COMMENT 'Fin de la période couverte', \`mois_reference\` smallint UNSIGNED NULL COMMENT 'Mois de référence (1-12)', \`annee_reference\` smallint UNSIGNED NULL COMMENT 'Année de référence', \`statut\` enum ('payé', 'impayé', 'partiel', 'annulé') NOT NULL COMMENT 'Statut du paiement' DEFAULT 'impayé', \`reference_transaction\` varchar(255) NULL COMMENT 'Référence externe de la transaction', \`commentaires\` text NULL COMMENT 'Notes et commentaires', \`recu_path\` varchar(255) NULL COMMENT 'Chemin du fichier de reçu', \`date_derniere_relance\` date NULL COMMENT 'Date de la dernière relance envoyée', \`nombre_relances\` tinyint UNSIGNED NOT NULL COMMENT 'Nombre de relances envoyées' DEFAULT '0', \`created_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updated_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`deleted_at\` datetime(6) NULL, UNIQUE INDEX \`IDX_48e96a3bd2eca4b7f239aceb07\` (\`numero_recu\`), PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`proprietaires\` (\`id\` bigint NOT NULL AUTO_INCREMENT COMMENT 'Identifiant unique du propriétaire', \`agences_id\` bigint NOT NULL COMMENT 'ID de l''agence qui gère le propriétaire', \`full_name\` varchar(255) NOT NULL COMMENT 'Nom et prénom du propriétaire', \`mobile\` varchar(255) NOT NULL COMMENT 'Numéro de téléphone mobile du propriétaire', \`email\` varchar(255) NULL COMMENT 'Adresse email du propriétaire', \`localite\` varchar(255) NOT NULL COMMENT 'Commune ou quartier de résidence', \`adresse\` text NULL COMMENT 'Adresse détaillée du propriétaire', \`piece_identite\` varchar(255) NULL COMMENT 'Numéro de la pièce d''identité (CNI, Passeport, etc.)', \`photo_piece\` varchar(255) NULL COMMENT 'Chemin vers la photo de la pièce d''identité', \`created_at\` datetime(6) NOT NULL COMMENT 'Date de création du propriétaire' DEFAULT CURRENT_TIMESTAMP(6), \`updated_at\` datetime(6) NOT NULL COMMENT 'Date de dernière mise à jour' DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`deleted_at\` datetime(6) NULL COMMENT 'Date de suppression (soft delete)', UNIQUE INDEX \`IDX_76e374b11da42d870f96851e2a\` (\`mobile\`), PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`biens_images\` (\`id\` bigint NOT NULL AUTO_INCREMENT COMMENT 'Identifiant unique de l''image', \`bien_id\` bigint NOT NULL COMMENT 'ID du bien immobilier associé à l''image', \`image_path\` varchar(255) NOT NULL COMMENT 'Chemin de stockage de l''image sur le serveur', \`is_main\` tinyint NOT NULL COMMENT 'Indique si l''image est l''image principale du bien' DEFAULT 0, \`display_order\` int NOT NULL COMMENT 'Ordre d''affichage des images dans la galerie' DEFAULT '0', \`created_at\` datetime(6) NOT NULL COMMENT 'Date de création de l''enregistrement' DEFAULT CURRENT_TIMESTAMP(6), \`updated_at\` datetime(6) NOT NULL COMMENT 'Date de dernière mise à jour' DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`deleted_at\` datetime(6) NULL COMMENT 'Date de suppression (soft delete)', PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`biens\` (\`id\` bigint NOT NULL AUTO_INCREMENT COMMENT 'Identifiant unique du bien', \`agence_id\` bigint NOT NULL COMMENT 'ID de l''agence qui gère le bien', \`proprietaire_id\` bigint NOT NULL COMMENT 'ID du propriétaire du bien', \`title\` varchar(255) NOT NULL COMMENT 'Titre du bien', \`reference\` varchar(255) NULL COMMENT 'Référence unique du bien', \`categorie\` enum ('Maison', 'Résidence', 'Terrain') NOT NULL COMMENT 'Catégorie du bien (Maison, Résidence, Terrain)', \`type\` enum ('2 pièces', '3 pièces', '4 pièces', '5 pièces', 'Villa', 'Studio') NULL COMMENT 'Type/nombre de pièces du bien', \`status\` enum ('Disponible', 'Occupé', 'En rénovation', 'En construction') NOT NULL COMMENT 'Statut actuel du bien' DEFAULT 'Disponible', \`description\` text NULL COMMENT 'Description détaillée du bien', \`superficie\` decimal(10,2) NULL COMMENT 'Surface en mètres carrés', \`pieces\` int NULL COMMENT 'Nombre total de pièces', \`bedrooms\` int NULL COMMENT 'Nombre de chambres', \`bathrooms\` int NULL COMMENT 'Nombre de salles de bain', \`floor\` int NULL COMMENT 'Étage du bien', \`garages\` int NULL COMMENT 'Nombre de places de stationnement', \`amenities\` json NULL COMMENT 'Liste des équipements disponibles', \`address\` varchar(255) NOT NULL COMMENT 'Adresse complète du bien', \`localite\` varchar(255) NOT NULL COMMENT 'Commune ou quartier principal', \`area\` varchar(255) NULL COMMENT 'Sous-quartier ou zone spécifique', \`loyer\` decimal(18,2) NOT NULL COMMENT 'Loyer mensuel en FCFA', \`deposit\` decimal(18,2) NULL COMMENT 'Montant de la caution en FCFA', \`charges\` decimal(18,2) NULL COMMENT 'Charges mensuelles en FCFA', \`agency_fees\` decimal(18,2) NULL COMMENT 'Frais d''agence en FCFA', \`main_image\` varchar(255) NULL COMMENT 'Chemin vers l''image principale', \`property_title_doc\` varchar(255) NULL COMMENT 'Chemin vers le document de titre de propriété', \`lease_doc\` varchar(255) NULL COMMENT 'Chemin vers le contrat de bail', \`condition_doc\` varchar(255) NULL COMMENT 'Chemin vers l''état des lieux', \`other_docs\` json NULL COMMENT 'Liste des chemins vers les documents additionnels', \`created_at\` datetime(6) NOT NULL COMMENT 'Date de création du bien' DEFAULT CURRENT_TIMESTAMP(6), \`updated_at\` datetime(6) NOT NULL COMMENT 'Date de dernière mise à jour' DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`deleted_at\` datetime(6) NULL COMMENT 'Date de suppression (soft delete)', PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`locations\` (\`id\` bigint NOT NULL AUTO_INCREMENT COMMENT 'Identifiant unique de la location', \`agence_id\` bigint NOT NULL COMMENT 'ID de l''agence qui gère la location', \`bien_id\` bigint NOT NULL COMMENT 'ID du bien immobilier concerné', \`locataire_id\` bigint NOT NULL COMMENT 'ID du locataire', \`created_by\` bigint NULL COMMENT 'ID de l''utilisateur qui a créé la location', \`date_debut\` date NOT NULL COMMENT 'Date de début du bail', \`date_fin\` date NULL COMMENT 'Date de fin du bail', \`loyer\` decimal(18,2) NOT NULL COMMENT 'Montant du loyer mensuel', \`caution\` decimal(18,2) NULL COMMENT 'Montant de la caution', \`charges\` decimal(18,2) NOT NULL COMMENT 'Montant des charges mensuelles' DEFAULT '0.00', \`jour_paiement\` tinyint UNSIGNED NOT NULL COMMENT 'Jour du mois pour le paiement (1-31)' DEFAULT '5', \`duree\` smallint UNSIGNED NOT NULL COMMENT 'Durée du bail en mois' DEFAULT '12', \`frequence_paiement\` varchar(255) NOT NULL COMMENT 'Fréquence de paiement (mensuel, trimestriel, etc.)' DEFAULT 'mensuel', \`statut\` enum ('actif', 'terminé', 'résilié', 'en attente') NOT NULL COMMENT 'Statut du bail' DEFAULT 'actif', \`contrat_path\` varchar(255) NULL COMMENT 'Chemin du fichier de contrat', \`etat_lieux_entree_path\` varchar(255) NULL COMMENT 'Chemin du fichier d''état des lieux d''entrée', \`etat_lieux_sortie_path\` varchar(255) NULL COMMENT 'Chemin du fichier d''état des lieux de sortie', \`notes\` text NULL COMMENT 'Notes sur le bail', \`created_at\` datetime(6) NOT NULL COMMENT 'Date de création de l''enregistrement' DEFAULT CURRENT_TIMESTAMP(6), \`updated_at\` datetime(6) NOT NULL COMMENT 'Date de dernière mise à jour' DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`deleted_at\` datetime(6) NULL COMMENT 'Date de suppression (soft delete)', PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`locataires\` (\`id\` bigint NOT NULL AUTO_INCREMENT, \`agence_id\` bigint NOT NULL DEFAULT '0', \`firstname\` varchar(100) NOT NULL, \`lastname\` varchar(100) NOT NULL, \`email\` varchar(255) NOT NULL, \`mobile\` varchar(255) NOT NULL, \`bithday\` date NULL, \`numero_cni\` varchar(255) NULL, \`profession\` varchar(255) NULL, \`adresse\` varchar(255) NULL, \`ville\` varchar(255) NULL, \`code_postal\` varchar(255) NULL, \`type_client\` varchar(255) NOT NULL DEFAULT 'locataire', \`statut\` int NOT NULL COMMENT '0=> inactif, 1=>actif' DEFAULT '1', \`piece_identite\` text NULL, \`justificatif_domicile\` text NULL, \`autres_documents\` text NULL, \`notes\` text NULL, \`created_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6), \`updated_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`deleted_at\` datetime(6) NULL, UNIQUE INDEX \`IDX_290ff7f837aac291a44a03569f\` (\`email\`), UNIQUE INDEX \`IDX_6a7450d9d08a92127df008579c\` (\`mobile\`), PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`agences\` (\`id\` bigint NOT NULL AUTO_INCREMENT COMMENT 'Identifiant unique de l''agence', \`admin_id\` bigint NOT NULL COMMENT 'ID de l''administrateur qui gère l''agence', \`logo_path\` varchar(255) NULL COMMENT 'Chemin vers le logo de l''agence', \`agences_name\` varchar(255) NOT NULL COMMENT 'Nom de l''agence', \`agences_email\` varchar(255) NOT NULL COMMENT 'Email unique de l''agence', \`agences_mobile\` varchar(255) NOT NULL COMMENT 'Numéro de téléphone mobile de l''agence', \`agences_location\` varchar(255) NOT NULL COMMENT 'Localisation principale de l''agence', \`agences_address\` text NULL COMMENT 'Adresse détaillée de l''agence', \`status\` int NOT NULL COMMENT 'Statut de l''agence (0: En attente, 1: Approuvée, 2: Rejetée, 3: Inactive)' DEFAULT '0', \`terms_accepted\` tinyint NOT NULL COMMENT 'Indique si les conditions d''utilisation ont été acceptées' DEFAULT 0, \`created_at\` datetime(6) NOT NULL COMMENT 'Date de création de l''agence' DEFAULT CURRENT_TIMESTAMP(6), \`updated_at\` datetime(6) NOT NULL COMMENT 'Date de dernière mise à jour' DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`deleted_at\` datetime(6) NULL COMMENT 'Date de suppression (soft delete)', UNIQUE INDEX \`IDX_2d802f8e778c5060616565695f\` (\`agences_email\`), UNIQUE INDEX \`IDX_4ea0372abee433a2de6d4fd23d\` (\`agences_mobile\`), PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`CREATE TABLE \`users\` (\`id\` bigint NOT NULL AUTO_INCREMENT COMMENT 'Identifiant unique de l''utilisateur', \`name\` varchar(255) NOT NULL COMMENT 'Nom complet de l''utilisateur', \`email\` varchar(255) NOT NULL COMMENT 'Email unique de l''utilisateur', \`categorie\` int NOT NULL COMMENT 'Catégorie de l''utilisateur (1: Admin, 2: Agent)' DEFAULT '2', \`email_verified_at\` timestamp NULL COMMENT 'Date de vérification de l''email', \`password\` varchar(255) NOT NULL COMMENT 'Mot de passe hashé de l''utilisateur', \`last_login_ip\` varchar(255) NULL COMMENT 'Dernière adresse IP de connexion', \`last_login_at\` timestamp NULL COMMENT 'Date de dernière connexion', \`avatar\` varchar(255) NULL COMMENT 'Chemin vers l''avatar de l''utilisateur', \`status\` enum ('active', 'inactive', 'suspended', 'pending') NOT NULL COMMENT 'Statut de l''utilisateur (active, inactive, suspended, pending)' DEFAULT 'active', \`bio\` text NULL COMMENT 'Biographie ou description de l''utilisateur', \`birth_date\` date NULL COMMENT 'Date de naissance de l''utilisateur', \`phone\` varchar(255) NULL COMMENT 'Numéro de téléphone de l''utilisateur', \`remember_token\` varchar(100) NULL COMMENT 'Token de "remember me" pour la persistance de session', \`created_at\` datetime(6) NOT NULL COMMENT 'Date de création de l''utilisateur' DEFAULT CURRENT_TIMESTAMP(6), \`updated_at\` datetime(6) NOT NULL COMMENT 'Date de dernière mise à jour' DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6), \`deleted_at\` datetime(6) NULL COMMENT 'Date de suppression (soft delete)', UNIQUE INDEX \`IDX_97672ac88f789774dd47f7c8be\` (\`email\`), PRIMARY KEY (\`id\`)) ENGINE=InnoDB`);
        await queryRunner.query(`ALTER TABLE \`agency_documents\` DROP COLUMN \`reference_number\``);
        await queryRunner.query(`ALTER TABLE \`agency_documents\` DROP COLUMN \`expiry_date\``);
        await queryRunner.query(`ALTER TABLE \`agency_documents\` DROP COLUMN \`is_verified\``);
        await queryRunner.query(`ALTER TABLE \`agency_documents\` DROP COLUMN \`notes\``);
        await queryRunner.query(`ALTER TABLE \`agency_documents\` ADD \`reference_number\` varchar(255) NULL COMMENT 'Numéro de référence du document'`);
        await queryRunner.query(`ALTER TABLE \`agency_documents\` ADD \`expiry_date\` date NULL COMMENT 'Date d''expiration du document'`);
        await queryRunner.query(`ALTER TABLE \`agency_documents\` ADD \`is_verified\` tinyint NOT NULL COMMENT 'Indique si le document est vérifié' DEFAULT 0`);
        await queryRunner.query(`ALTER TABLE \`agency_documents\` ADD \`notes\` text NULL COMMENT 'Notes ou commentaires sur le document'`);
        await queryRunner.query(`ALTER TABLE \`agency_documents\` ADD \`status\` int NOT NULL COMMENT '1 = pending, 2 = approved, 3 = rejected' DEFAULT '1'`);
        await queryRunner.query(`ALTER TABLE \`agency_documents\` ADD \`name\` varchar(255) NULL`);
        await queryRunner.query(`ALTER TABLE \`agency_documents\` ADD \`rejection_reason\` varchar(255) NULL`);
        await queryRunner.query(`ALTER TABLE \`agency_documents\` ADD \`admin_comment\` varchar(255) NOT NULL DEFAULT ''`);
        await queryRunner.query(`ALTER TABLE \`agency_documents\` ADD \`validated_at\` timestamp NULL`);
        await queryRunner.query(`ALTER TABLE \`agency_documents\` ADD \`validated_by\` int NOT NULL DEFAULT '0'`);
        await queryRunner.query(`ALTER TABLE \`agency_documents\` CHANGE \`id\` \`id\` bigint NOT NULL AUTO_INCREMENT`);
        await queryRunner.query(`ALTER TABLE \`agency_documents\` CHANGE \`agence_id\` \`agence_id\` bigint NOT NULL`);
        await queryRunner.query(`ALTER TABLE \`agency_documents\` DROP COLUMN \`type\``);
        await queryRunner.query(`ALTER TABLE \`agency_documents\` ADD \`type\` int NOT NULL COMMENT '0 = RCCM, 1 = DFE, 2 = License, 3 = Statuts, 4 = Other'`);
        await queryRunner.query(`ALTER TABLE \`agency_documents\` CHANGE \`file_path\` \`file_path\` varchar(255) NULL`);
        await queryRunner.query(`ALTER TABLE \`agency_documents\` CHANGE \`created_at\` \`created_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`agency_documents\` CHANGE \`updated_at\` \`updated_at\` datetime(6) NOT NULL DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`agency_documents\` CHANGE \`deleted_at\` \`deleted_at\` datetime(6) NULL`);
        await queryRunner.query(`ALTER TABLE \`agency_documents\` ADD CONSTRAINT \`FK_19835865f466fc5b02e3285fe1b\` FOREIGN KEY (\`agence_id\`) REFERENCES \`agences\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`notifications\` ADD CONSTRAINT \`FK_19629e8eb1e6023c4c73e661c82\` FOREIGN KEY (\`created_by\`) REFERENCES \`users\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`notifications\` ADD CONSTRAINT \`FK_2cac30112842625f2bf9028f57f\` FOREIGN KEY (\`reference_id\`) REFERENCES \`paiements\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`paiements\` ADD CONSTRAINT \`FK_43419e82007766a9ce373edac83\` FOREIGN KEY (\`agence_id\`) REFERENCES \`agences\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`paiements\` ADD CONSTRAINT \`FK_26937ff666ec5377c98c005e1f1\` FOREIGN KEY (\`property_id\`) REFERENCES \`biens\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`paiements\` ADD CONSTRAINT \`FK_23866f87fda30555f96fa380724\` FOREIGN KEY (\`locataire_id\`) REFERENCES \`locataires\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`paiements\` ADD CONSTRAINT \`FK_79763558c1db2cf9d416ca579e2\` FOREIGN KEY (\`proprietaire_id\`) REFERENCES \`proprietaires\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`paiements\` ADD CONSTRAINT \`FK_981635073f8ec79ddb573111c39\` FOREIGN KEY (\`location_id\`) REFERENCES \`locations\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`paiements\` ADD CONSTRAINT \`FK_db89b9edb3b1e255614fea3bed1\` FOREIGN KEY (\`created_by\`) REFERENCES \`users\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`proprietaires\` ADD CONSTRAINT \`FK_12cb0be4a5da0aba4f8db853388\` FOREIGN KEY (\`agences_id\`) REFERENCES \`agences\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`biens_images\` ADD CONSTRAINT \`FK_50b2e25964f7344bdbfa0bbdc42\` FOREIGN KEY (\`bien_id\`) REFERENCES \`biens\`(\`id\`) ON DELETE CASCADE ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`biens\` ADD CONSTRAINT \`FK_b02db203fe15876916f85224f59\` FOREIGN KEY (\`agence_id\`) REFERENCES \`agences\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`biens\` ADD CONSTRAINT \`FK_e6cca6ef287ec1962ae2ef6e0b6\` FOREIGN KEY (\`proprietaire_id\`) REFERENCES \`proprietaires\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`locations\` ADD CONSTRAINT \`FK_729e91ccb8a98c84a7a5bf9da62\` FOREIGN KEY (\`agence_id\`) REFERENCES \`agences\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`locations\` ADD CONSTRAINT \`FK_c672b154a3ec53b04e7338d82d0\` FOREIGN KEY (\`bien_id\`) REFERENCES \`biens\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`locations\` ADD CONSTRAINT \`FK_94bde3e5a3552ee8271d49d1adf\` FOREIGN KEY (\`locataire_id\`) REFERENCES \`locataires\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`locations\` ADD CONSTRAINT \`FK_190a7ee60db34ef946627cbbe9f\` FOREIGN KEY (\`created_by\`) REFERENCES \`users\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`locataires\` ADD CONSTRAINT \`FK_aa69d4a349570f3d9fddebbd859\` FOREIGN KEY (\`agence_id\`) REFERENCES \`agences\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
        await queryRunner.query(`ALTER TABLE \`agences\` ADD CONSTRAINT \`FK_c89f9b5db997ca868b2c57556aa\` FOREIGN KEY (\`admin_id\`) REFERENCES \`users\`(\`id\`) ON DELETE NO ACTION ON UPDATE NO ACTION`);
    }

    public async down(queryRunner: QueryRunner): Promise<void> {
        await queryRunner.query(`ALTER TABLE \`agences\` DROP FOREIGN KEY \`FK_c89f9b5db997ca868b2c57556aa\``);
        await queryRunner.query(`ALTER TABLE \`locataires\` DROP FOREIGN KEY \`FK_aa69d4a349570f3d9fddebbd859\``);
        await queryRunner.query(`ALTER TABLE \`locations\` DROP FOREIGN KEY \`FK_190a7ee60db34ef946627cbbe9f\``);
        await queryRunner.query(`ALTER TABLE \`locations\` DROP FOREIGN KEY \`FK_94bde3e5a3552ee8271d49d1adf\``);
        await queryRunner.query(`ALTER TABLE \`locations\` DROP FOREIGN KEY \`FK_c672b154a3ec53b04e7338d82d0\``);
        await queryRunner.query(`ALTER TABLE \`locations\` DROP FOREIGN KEY \`FK_729e91ccb8a98c84a7a5bf9da62\``);
        await queryRunner.query(`ALTER TABLE \`biens\` DROP FOREIGN KEY \`FK_e6cca6ef287ec1962ae2ef6e0b6\``);
        await queryRunner.query(`ALTER TABLE \`biens\` DROP FOREIGN KEY \`FK_b02db203fe15876916f85224f59\``);
        await queryRunner.query(`ALTER TABLE \`biens_images\` DROP FOREIGN KEY \`FK_50b2e25964f7344bdbfa0bbdc42\``);
        await queryRunner.query(`ALTER TABLE \`proprietaires\` DROP FOREIGN KEY \`FK_12cb0be4a5da0aba4f8db853388\``);
        await queryRunner.query(`ALTER TABLE \`paiements\` DROP FOREIGN KEY \`FK_db89b9edb3b1e255614fea3bed1\``);
        await queryRunner.query(`ALTER TABLE \`paiements\` DROP FOREIGN KEY \`FK_981635073f8ec79ddb573111c39\``);
        await queryRunner.query(`ALTER TABLE \`paiements\` DROP FOREIGN KEY \`FK_79763558c1db2cf9d416ca579e2\``);
        await queryRunner.query(`ALTER TABLE \`paiements\` DROP FOREIGN KEY \`FK_23866f87fda30555f96fa380724\``);
        await queryRunner.query(`ALTER TABLE \`paiements\` DROP FOREIGN KEY \`FK_26937ff666ec5377c98c005e1f1\``);
        await queryRunner.query(`ALTER TABLE \`paiements\` DROP FOREIGN KEY \`FK_43419e82007766a9ce373edac83\``);
        await queryRunner.query(`ALTER TABLE \`notifications\` DROP FOREIGN KEY \`FK_2cac30112842625f2bf9028f57f\``);
        await queryRunner.query(`ALTER TABLE \`notifications\` DROP FOREIGN KEY \`FK_19629e8eb1e6023c4c73e661c82\``);
        await queryRunner.query(`ALTER TABLE \`agency_documents\` DROP FOREIGN KEY \`FK_19835865f466fc5b02e3285fe1b\``);
        await queryRunner.query(`ALTER TABLE \`agency_documents\` CHANGE \`deleted_at\` \`deleted_at\` datetime(6) NULL COMMENT 'Date de suppression (soft delete)'`);
        await queryRunner.query(`ALTER TABLE \`agency_documents\` CHANGE \`updated_at\` \`updated_at\` datetime(6) NOT NULL COMMENT 'Date de dernière mise à jour' DEFAULT CURRENT_TIMESTAMP(6) ON UPDATE CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`agency_documents\` CHANGE \`created_at\` \`created_at\` datetime(6) NOT NULL COMMENT 'Date de création du document' DEFAULT CURRENT_TIMESTAMP(6)`);
        await queryRunner.query(`ALTER TABLE \`agency_documents\` CHANGE \`file_path\` \`file_path\` varchar(255) NOT NULL COMMENT 'Chemin vers le fichier du document'`);
        await queryRunner.query(`ALTER TABLE \`agency_documents\` DROP COLUMN \`type\``);
        await queryRunner.query(`ALTER TABLE \`agency_documents\` ADD \`type\` enum ('Registre de commerce', 'Patente', 'Attestation fiscale', 'Autre') NOT NULL COMMENT 'Type de document'`);
        await queryRunner.query(`ALTER TABLE \`agency_documents\` CHANGE \`agence_id\` \`agence_id\` bigint NOT NULL COMMENT 'ID de l''agence propriétaire du document'`);
        await queryRunner.query(`ALTER TABLE \`agency_documents\` CHANGE \`id\` \`id\` bigint NOT NULL AUTO_INCREMENT COMMENT 'Identifiant unique du document'`);
        await queryRunner.query(`ALTER TABLE \`agency_documents\` DROP COLUMN \`validated_by\``);
        await queryRunner.query(`ALTER TABLE \`agency_documents\` DROP COLUMN \`validated_at\``);
        await queryRunner.query(`ALTER TABLE \`agency_documents\` DROP COLUMN \`admin_comment\``);
        await queryRunner.query(`ALTER TABLE \`agency_documents\` DROP COLUMN \`rejection_reason\``);
        await queryRunner.query(`ALTER TABLE \`agency_documents\` DROP COLUMN \`name\``);
        await queryRunner.query(`ALTER TABLE \`agency_documents\` DROP COLUMN \`status\``);
        await queryRunner.query(`ALTER TABLE \`agency_documents\` DROP COLUMN \`notes\``);
        await queryRunner.query(`ALTER TABLE \`agency_documents\` DROP COLUMN \`is_verified\``);
        await queryRunner.query(`ALTER TABLE \`agency_documents\` DROP COLUMN \`expiry_date\``);
        await queryRunner.query(`ALTER TABLE \`agency_documents\` DROP COLUMN \`reference_number\``);
        await queryRunner.query(`ALTER TABLE \`agency_documents\` ADD \`notes\` text NULL COMMENT 'Notes ou commentaires sur le document'`);
        await queryRunner.query(`ALTER TABLE \`agency_documents\` ADD \`is_verified\` tinyint NOT NULL COMMENT 'Indique si le document est vérifié' DEFAULT 0`);
        await queryRunner.query(`ALTER TABLE \`agency_documents\` ADD \`expiry_date\` date NULL COMMENT 'Date d''expiration du document'`);
        await queryRunner.query(`ALTER TABLE \`agency_documents\` ADD \`reference_number\` varchar(255) NULL COMMENT 'Numéro de référence du document'`);
        await queryRunner.query(`DROP INDEX \`IDX_97672ac88f789774dd47f7c8be\` ON \`users\``);
        await queryRunner.query(`DROP TABLE \`users\``);
        await queryRunner.query(`DROP INDEX \`IDX_4ea0372abee433a2de6d4fd23d\` ON \`agences\``);
        await queryRunner.query(`DROP INDEX \`IDX_2d802f8e778c5060616565695f\` ON \`agences\``);
        await queryRunner.query(`DROP TABLE \`agences\``);
        await queryRunner.query(`DROP INDEX \`IDX_6a7450d9d08a92127df008579c\` ON \`locataires\``);
        await queryRunner.query(`DROP INDEX \`IDX_290ff7f837aac291a44a03569f\` ON \`locataires\``);
        await queryRunner.query(`DROP TABLE \`locataires\``);
        await queryRunner.query(`DROP TABLE \`locations\``);
        await queryRunner.query(`DROP TABLE \`biens\``);
        await queryRunner.query(`DROP TABLE \`biens_images\``);
        await queryRunner.query(`DROP INDEX \`IDX_76e374b11da42d870f96851e2a\` ON \`proprietaires\``);
        await queryRunner.query(`DROP TABLE \`proprietaires\``);
        await queryRunner.query(`DROP INDEX \`IDX_48e96a3bd2eca4b7f239aceb07\` ON \`paiements\``);
        await queryRunner.query(`DROP TABLE \`paiements\``);
        await queryRunner.query(`DROP TABLE \`notifications\``);
        await queryRunner.query(`DROP TABLE \`agency_documents\``);
    }

}
